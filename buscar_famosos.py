from pymongo import MongoClient  # Importa la librer√≠a para conectar con MongoDB desde Python

# Establece la conexi√≥n con MongoDB local
cliente = MongoClient("mongodb://localhost:27017")  # Se conecta al servidor local en el puerto por defecto
db = cliente["almacenamiento"]                      # Selecciona o crea la base de datos llamada 'almacenamiento'
coleccion = db["fnac_famosos_norm"]                 # Selecciona o crea la colecci√≥n que contiene los famosos normalizados

# Funci√≥n para buscar famosos por nombre
def buscar_por_nombre():
    # Solicita el nombre del famoso al usuario
    nombre = input("üîç Ingrese el nombre del famoso a buscar: ").strip().lower()
    resultados = coleccion.find()  # Recupera todos los registros de la colecci√≥n
    # Filtra los registros que contengan el nombre (ignora may√∫sculas y espacios)
    encontrados = [r['registro'] for r in resultados if nombre in r['registro'].lower()]

    if encontrados:
        print("\n‚úÖ Resultados encontrados:")
        for r in encontrados:
            print(f" - {r}")  # Imprime cada registro encontrado
    else:
        print("‚ùå No se encontr√≥ ning√∫n famoso con ese nombre.")  # Si no hay coincidencias

# Funci√≥n para buscar famosos por a√±o de nacimiento
def buscar_por_anio():
    anio = input("üìÖ Ingrese el a√±o de nacimiento a buscar (ej: 1564): ").strip()
    resultados = coleccion.find()  # Consulta todos los registros
    # Busca coincidencias que contengan el a√±o en el campo 'registro'
    encontrados = [r['registro'] for r in resultados if f"/{anio}" in r['registro'] or anio in r['registro'].split("/")[-1]]

    if encontrados:
        print("\n‚úÖ Famosos nacidos en ese a√±o:")
        for r in encontrados:
            print(f" - {r}")  # Muestra los registros encontrados
    else:
        print("‚ùå No se encontr√≥ ning√∫n famoso para ese a√±o.")  # Mensaje si no hay resultados

# Men√∫ principal
print("=== BUSCADOR DE FAMOSOS ===")  # T√≠tulo del programa
print("1. Buscar por nombre")
print("2. Buscar por a√±o")
opcion = input("Seleccione una opci√≥n (1 o 2): ")  # Pide al usuario que elija una opci√≥n

# Seg√∫n la opci√≥n seleccionada, ejecuta la funci√≥n correspondiente
if opcion == "1":
    buscar_por_nombre()
elif opcion == "2":
    buscar_por_anio()
else:
    print("‚ùå Opci√≥n inv√°lida.")  # Mensaje si el usuario ingresa algo incorrecto
